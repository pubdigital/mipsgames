# Car Dodge Game - Sprite ROJO completo + movimiento adelante/atr√°s + Power-up
# SETUP:
#    Tools -> Bitmap Display:
#    Unit Width: 4, Unit Height: 4
#    Display Width: 256, Display Height: 512
#    Base: 0x10008000 ($gp)
#    Connect to MIPS
# 3. Tools -> Keyboard MMIO -> Connect to MIPS
# 4. Run -> Assemble (F3)
# 5. Run -> Go (F5)
#
# CONTROLES:
# A - Izquierda
# D - Derecha  
# W - Adelante (acelerar)
# S - Atr√°s (frenar)
# Q - Salir

.data
    display: .word 0x10008000
    gameStarted: .word 0        # 0 = men˙, 1 = jugando
    menuBlink: .word 0          # Para efecto de parpadeo en "PRESS ENTER"
   
    # Colores del auto ROJO (tu sprite)
    colorBlack: .word 0x000000
    colorRed1: .word 0xFF0000      # Rojo brillante del cuerpo
    colorRed2: .word 0xB40000      # Rojo medio
    colorRed3: .word 0x8B0000      # Rojo oscuro
    colorGray1: .word 0x464646     # Gris ruedas
    colorGray2: .word 0x2E2E2E     # Gris oscuro
    colorBlue: .word 0x0000FF      # Azul para ventanas/detalles
    colorWhite: .word 0xFFFFFF
   
    carX: .word 28        # X del auto (centrado)
    carLane: .word 1      # 0=izq, 1=centro, 2=derecha
    carY: .word 50        # Y del auto
    carSpeed: .word 0     # Velocidad del auto (0-3)
   
    obsX: .word 28        # X del obst√°culo
    obsY: .word 0         # Y inicial
    obsSpeed: .word 1     # Velocidad base del obst√°culo
   
    score: .word 0
    lives: .word 3
   
    minX: .word 4
    maxX: .word 56
    minY: .word 10
    maxY: .word 58
   
    lane0X: .word 13      # X del carril izquierdo (m√°s a la izquierda)
    lane1X: .word 32      # X del carril centro (centrado en pantalla)
    lane2X: .word 51      # X del carril derecho (m√°s a la derecha)
   
    obsLane0X: .word 5     # Carril izq: 13 (centro auto) - 8 (mitad cono) = 5
    obsLane1X: .word 24    # Carril centro: 32 - 8 = 24
    obsLane2X: .word 43    # Carril derecho: 51 - 8 = 43
   
    # Sistema de m√∫ltiples obst√°culos (hasta 5 simult√°neos)
    MAX_OBSTACLES: .word 5
    obstaclesX: .word 0, 0, 0, 0, 0
    obstaclesY: .word 0, 0, 0, 0, 0
    obstaclesType: .word 0, 0, 0, 0, 0
    obstaclesActive: .word 0, 0, 0, 0, 0    # TODOS INACTIVOS al inicio
    spawnDistance: .word 35
    currentObsX: .word 0
    currentObsY: .word 0
    currentObsType: .word 0
    currentObsIndex: .word 0
    lastLane: .word -1          # √öltimo carril usado (-1 = ninguno)
    lastLane2: .word -1         # Pen√∫ltimo carril usado
    consecutiveSameLane: .word 0 # Contador de carriles consecutivos

.text
main:
    li $s0, 0x10008000
   
    li $t0, 12345
    sw $t0, randomSeed
    li $t0, 1
    sw $t0, frameCounter

menuLoop:
    # ========== DIBUJAR PISTA ANIMADA ==========
    jal updateScroll
    jal drawTrack
    
    # Dibujar bordes
    li $t0, 0
menuBorderLoop:
    li $a0, 0
    move $a1, $t0
    li $a2, 0xDA0000
    jal setPixel
    li $a0, 1
    jal setPixel
    li $a0, 62
    jal setPixel
    li $a0, 63
    jal setPixel
    addi $t0, $t0, 1
    li $t1, 128
    blt $t0, $t1, menuBorderLoop
    
    # ===== DIBUJAR AUTO EN EL CENTRO (FIJO) =====
    li $a0, 32
    li $a1, 50        # M·s abajo que antes
    addi $sp, $sp, -8
    sw $s1, 0($sp)
    sw $s2, 4($sp)
    jal drawCarSprite32
    lw $s1, 0($sp)
    lw $s2, 4($sp)
    addi $sp, $sp, 8
    
    # ===== TÕTULO "TRACKER RACE" CENTRADO Y HERMOSO =====
    li $t2, 0xFFFF00     # Amarillo brillante
    li $t9, 0xFF8800     # Naranja para sombra/profundidad
    
    # ========== TRACKER (primera lÌnea) - CENTRADO ==========
    # Ancho total de TRACKER: ~28 pÌxeles
    # Centro: (64-28)/2 = 18
    
    # === T ===
    li $a0, 18
    li $a1, 10
    move $a2, $t2
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    li $a0, 19
    li $a1, 11
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    
    # === R ===
    li $a0, 22
    li $a1, 10
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 23
    li $a1, 10
    jal setPixel
    li $a0, 24
    jal setPixel
    li $a0, 24
    li $a1, 12
    jal setPixel
    li $a0, 23
    jal setPixel
    li $a0, 24
    li $a1, 13
    jal setPixel
    li $a1, 14
    jal setPixel
    
    # === A ===
    li $a0, 26
    li $a1, 10
    jal setPixel
    li $a0, 27
    jal setPixel
    li $a0, 28
    jal setPixel
    li $a0, 26
    li $a1, 11
    jal setPixel
    li $a0, 28
    jal setPixel
    li $a0, 26
    li $a1, 12
    jal setPixel
    li $a0, 27
    jal setPixel
    li $a0, 28
    jal setPixel
    li $a0, 26
    li $a1, 13
    jal setPixel
    li $a0, 28
    jal setPixel
    li $a0, 26
    li $a1, 14
    jal setPixel
    li $a0, 28
    jal setPixel
    
    # === C ===
    li $a0, 30
    li $a1, 10
    jal setPixel
    li $a0, 31
    jal setPixel
    li $a0, 32
    jal setPixel
    li $a0, 30
    li $a1, 11
    jal setPixel
    li $a1, 12
    jal setPixel
    li $a1, 13
    jal setPixel
    li $a1, 14
    jal setPixel
    li $a0, 31
    jal setPixel
    li $a0, 32
    jal setPixel
    
    # === K ===
    li $a0, 34
    li $a1, 10
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 36
    li $a1, 10
    jal setPixel
    li $a0, 35
    li $a1, 11
    jal setPixel
    li $a0, 35
    li $a1, 12
    jal setPixel
    li $a0, 36
    li $a1, 13
    jal setPixel
    li $a1, 14
    jal setPixel
    
    # === E ===
    li $a0, 38
    li $a1, 10
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 39
    li $a1, 10
    jal setPixel
    li $a0, 40
    jal setPixel
    li $a0, 39
    li $a1, 12
    jal setPixel
    li $a0, 40
    jal setPixel
    li $a0, 39
    li $a1, 14
    jal setPixel
    li $a0, 40
    jal setPixel
    
    # === R ===
    li $a0, 42
    li $a1, 10
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 43
    li $a1, 10
    jal setPixel
    li $a0, 44
    jal setPixel
    li $a0, 44
    li $a1, 12
    jal setPixel
    li $a0, 43
    jal setPixel
    li $a0, 44
    li $a1, 13
    jal setPixel
    li $a1, 14
    jal setPixel
    
    # ========== RACE (segunda lÌnea, centrada) ==========
    # Ancho de RACE: ~24 pÌxeles
    # Centro: (64-24)/2 = 20
    li $t2, 0x00FFFF     # Cyan brillante para destacar
    
    # === R ===
    li $a0, 20
    li $a1, 20
    move $a2, $t2
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    # Top bar
    li $a0, 21
    li $a1, 20
    jal setPixel
    li $a0, 22
    jal setPixel
    li $a0, 23
    jal setPixel
    # Right side
    li $a0, 23
    li $a1, 21
    jal setPixel
    li $a1, 22
    jal setPixel
    # Middle bar
    li $a0, 21
    li $a1, 23
    jal setPixel
    li $a0, 22
    jal setPixel
    # Diagonal
    li $a0, 22
    li $a1, 24
    jal setPixel
    li $a0, 23
    li $a1, 25
    jal setPixel
    li $a1, 26
    jal setPixel
    
    # === A ===
    li $a0, 26
    li $a1, 20
    jal setPixel
    li $a0, 27
    jal setPixel
    li $a0, 28
    jal setPixel
    li $a0, 29
    jal setPixel
    # Left side
    li $a0, 25
    li $a1, 21
    jal setPixel
    li $a1, 22
    jal setPixel
    li $a1, 23
    jal setPixel
    li $a1, 24
    jal setPixel
    li $a1, 25
    jal setPixel
    li $a1, 26
    jal setPixel
    # Right side
    li $a0, 30
    li $a1, 21
    jal setPixel
    li $a1, 22
    jal setPixel
    li $a1, 23
    jal setPixel
    li $a1, 24
    jal setPixel
    li $a1, 25
    jal setPixel
    li $a1, 26
    jal setPixel
    # Middle bar
    li $a0, 26
    li $a1, 23
    jal setPixel
    li $a0, 27
    jal setPixel
    li $a0, 28
    jal setPixel
    li $a0, 29
    jal setPixel
    
    # === C ===
    li $a0, 33
    li $a1, 20
    jal setPixel
    li $a0, 34
    jal setPixel
    li $a0, 35
    jal setPixel
    li $a0, 36
    jal setPixel
    li $a0, 33
    li $a1, 21
    jal setPixel
    li $a1, 22
    jal setPixel
    li $a1, 23
    jal setPixel
    li $a1, 24
    jal setPixel
    li $a1, 25
    jal setPixel
    li $a1, 26
    jal setPixel
    li $a0, 34
    jal setPixel
    li $a0, 35
    jal setPixel
    li $a0, 36
    jal setPixel
    
    # === E ===
    li $a0, 39
    li $a1, 20
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    # Top
    li $a0, 40
    li $a1, 20
    jal setPixel
    li $a0, 41
    jal setPixel
    li $a0, 42
    jal setPixel
    # Middle
    li $a0, 40
    li $a1, 23
    jal setPixel
    li $a0, 41
    jal setPixel
    li $a0, 42
    jal setPixel
    # Bottom
    li $a0, 40
    li $a1, 26
    jal setPixel
    li $a0, 41
    jal setPixel
    li $a0, 42
    jal setPixel
    
    # ===== BORDE/SOMBRA DECORATIVO PARA "RACE" =====
    li $t2, 0xFF8800     # Naranja para profundidad
    # Sombra debajo de RACE
    li $a0, 21
    li $a1, 27
    move $a2, $t2
    jal setPixel
    li $a0, 26
    jal setPixel
    li $a0, 33
    jal setPixel
    li $a0, 40
    jal setPixel
    
    # ===== "PRESS ENTER" PARPADEANTE ABAJO =====
    lw $t0, menuBlink
    li $t1, 10              # Parpadea cada 20 frames
    blt $t0, $t1, skipPressEnterMenu
    
    li $t2, 0x00FF00        # Verde brillante
    
    # PRESS (simplificado)
    # P
    li $a0, 10
    li $a1, 108
    move $a2, $t2
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 11
    li $a1, 108
    jal setPixel
    li $a0, 12
    jal setPixel
    li $a0, 12
    li $a1, 110
    jal setPixel
    li $a0, 11
    jal setPixel
    
    # R
    li $a0, 14
    li $a1, 108
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 15
    li $a1, 108
    jal setPixel
    li $a0, 16
    jal setPixel
    li $a0, 16
    li $a1, 110
    jal setPixel
    li $a0, 15
    jal setPixel
    li $a0, 16
    li $a1, 111
    jal setPixel
    li $a1, 112
    jal setPixel
    
    # E
    li $a0, 18
    li $a1, 108
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 19
    li $a1, 108
    jal setPixel
    li $a0, 20
    jal setPixel
    li $a0, 19
    li $a1, 110
    jal setPixel
    li $a0, 19
    li $a1, 112
    jal setPixel
    li $a0, 20
    jal setPixel
    
    # S
    li $a0, 22
    li $a1, 108
    jal setPixel
    li $a0, 23
    jal setPixel
    li $a0, 22
    li $a1, 109
    jal setPixel
    li $a1, 110
    jal setPixel
    li $a0, 23
    jal setPixel
    li $a1, 111
    jal setPixel
    li $a1, 112
    jal setPixel
    li $a0, 22
    jal setPixel
    
    # S
    li $a0, 25
    li $a1, 108
    jal setPixel
    li $a0, 26
    jal setPixel
    li $a0, 25
    li $a1, 109
    jal setPixel
    li $a1, 110
    jal setPixel
    li $a0, 26
    jal setPixel
    li $a1, 111
    jal setPixel
    li $a1, 112
    jal setPixel
    li $a0, 25
    jal setPixel
    
    # ENTER (simplificado - solo letras clave)
    # E
    li $a0, 30
    li $a1, 108
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 31
    li $a1, 108
    jal setPixel
    li $a0, 32
    jal setPixel
    li $a0, 31
    li $a1, 110
    jal setPixel
    li $a0, 31
    li $a1, 112
    jal setPixel
    li $a0, 32
    jal setPixel
    
    # N
    li $a0, 34
    li $a1, 108
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 36
    li $a1, 108
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 35
    li $a1, 109
    jal setPixel
    li $a1, 110
    jal setPixel
    
    # T
    li $a0, 38
    li $a1, 108
    jal setPixel
    li $a0, 39
    jal setPixel
    li $a0, 40
    jal setPixel
    li $a0, 39
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    
    # E
    li $a0, 42
    li $a1, 108
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 43
    li $a1, 108
    jal setPixel
    li $a0, 44
    jal setPixel
    li $a0, 43
    li $a1, 110
    jal setPixel
    li $a0, 43
    li $a1, 112
    jal setPixel
    li $a0, 44
    jal setPixel
    
    # R
    li $a0, 46
    li $a1, 108
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    li $a0, 47
    li $a1, 108
    jal setPixel
    li $a0, 48
    jal setPixel
    li $a0, 48
    li $a1, 110
    jal setPixel
    li $a0, 47
    jal setPixel
    li $a0, 48
    li $a1, 111
    jal setPixel
    li $a1, 112
    jal setPixel
    
skipPressEnterMenu:
    # Incrementar blink M¡S R¡PIDO
    lw $t0, menuBlink
    addi $t0, $t0, 1
    li $t1, 30              # CAMBIADO: de 40 a 30 (ciclo m·s r·pido)
    blt $t0, $t1, saveBlinkMenu
    li $t0, 0
saveBlinkMenu:
    sw $t0, menuBlink
    
    # ===== VERIFICAR INPUT =====
    li $t0, 0xffff0000
    lw $t1, 0($t0)
    andi $t1, $t1, 1
    beq $t1, 0, noKeyMenu
    
    lw $t1, 4($t0)
    li $t2, 0x0A              # Enter
    beq $t1, $t2, startGame
    li $t2, 0x0D              # TambiÈn aceptar Return
    beq $t1, $t2, startGame
    
noKeyMenu:
    # Delay m·s corto para animaciÛn fluida
    li $t0, 20000
menuDelayLoop:
    addi $t0, $t0, -1
    bgtz $t0, menuDelayLoop
    
    j menuLoop

startGame:
    # Iniciar juego
    li $a0, 0x10008000
    li $a1, 0x5d5d5d
    jal fillScreen
   
    jal initObstacles
   
    # Dibujar bordes
    li $t0, 0
borderLoop:
    li $a0, 0
    move $a1, $t0
    li $a2, 0xDA0000
    jal setPixel
    li $a0, 1
    jal setPixel
    li $a0, 62
    jal setPixel
    li $a0, 63
    jal setPixel
    addi $t0, $t0, 1
    li $t1, 128
    blt $t0, $t1, borderLoop
    
    li $s0, 0x10008000
   
    li $t0, 1
    sw $t0, carLane
   
    lw $s1, lane1X
    sw $s1, carX
   
    lw $s2, carY
    lw $s3, obsLane1X
    sw $s3, obsX
    lw $s4, obsY
    lw $s5, carSpeed

loop:
    # Actualizar contador de frames para mejor aleatoriedad
    lw $t9, frameCounter
    addi $t9, $t9, 1
    sw $t9, frameCounter
   
    # Si randomSeed est√° sin inicializar (0), inicializa con frameCounter
    lw $t9, randomSeed
    bne $t9, 0, skipSeedInit
    lw $t9, frameCounter
    sw $t9, randomSeed
skipSeedInit:
    # === VERIFICAR SLOWDOWN ACTIVO ===
    lw $t9, slowdownActive
    beqz $t9, continueNormal
   
    # Si hay slowdown, mantener velocidad m√°xima en 0
    lw $t8, carSpeed
    blez $t8, continueNormal
    li $t8, 0
    sw $t8, carSpeed
    move $s5, $t8
   
continueNormal:
    # === FASE 1: CALCULAR (sin dibujar nada) ===
    # Mover obst√°culo considerando slowdown
    lw $t8, carSpeed
   
normalSpeed:
    lw $t9, slowdownActive
    beqz $t9, addNormalSpeed
   
    # Con slowdown, el mundo se mueve m√°s r√°pido (efecto relativo)
    addi $t8, $t8, 3
    j moveObstacle
   
addNormalSpeed:
    addi $t8, $t8, 2
   
moveObstacle:
    # Mover todos los obst√°culos activos
    li $t9, 0                    # √≠ndice del obst√°culo
    la $s6, obstaclesY
    la $s7, obstaclesActive
   
moveObstacleLoop:
    lw $t0, MAX_OBSTACLES
    bge $t9, $t0, endMoveObstacles
   
    # Verificar si est√° activo
    sll $t1, $t9, 2
    add $t2, $s7, $t1
    lw $t3, 0($t2)
    beqz $t3, nextObstacle       # Si no est√° activo, skip
   
    # Mover obst√°culo
    add $t4, $s6, $t1
    lw $t5, 0($t4)               # Y actual
    add $t5, $t5, $t8            # Sumar velocidad
    sw $t5, 0($t4)               # Guardar nueva Y
   
    # Verificar si sali√≥ de pantalla
    li $t6, 128
    blt $t5, $t6, nextObstacle
   
    # Desactivar obst√°culo
    sw $zero, 0($t2)
   
    # Incrementar score
    lw $t0, score
    addi $t0, $t0, 1
    sw $t0, score
   
nextObstacle:
    addi $t9, $t9, 1
    j moveObstacleLoop

endMoveObstacles:
    # Intentar spawnear nuevo obst√°culo
    jal trySpawnObstacle

skipReset:
    # === FASE 2: DIBUJAR TODO DE UN TIR√ìN ===
    jal updateScroll
    jal drawTrack         # Dibuja fondo
   
    li $t9, 0
    la $s6, obstaclesX
    la $s7, obstaclesY
    # Dibujar todos los obst√°culos activos
    li $t9, 0
   
drawObstaclesLoop:
    lw $t0, MAX_OBSTACLES
    bge $t9, $t0, endDrawObstacles
   
    # Verificar si est√° activo
    sll $t1, $t9, 2
    la $t2, obstaclesActive
    add $t2, $t2, $t1
    lw $t3, 0($t2)
    beqz $t3, nextDrawObstacle
   
    # Cargar tipo actual
    la $t2, obstaclesType
    add $t2, $t2, $t1
    lw $t4, 0($t2)
    sw $t4, obsType
   
    # Cargar X
    la $t2, obstaclesX
    add $t2, $t2, $t1
    lw $a0, 0($t2)
   
    # Cargar Y
    la $t2, obstaclesY
    add $t2, $t2, $t1
    lw $a1, 0($t2)
   
    # Guardar √≠ndice antes de llamar a drawObstacle
    sw $t9, currentObsIndex
   
    jal drawObstacle
   
    # Restaurar √≠ndice
    lw $t9, currentObsIndex

nextDrawObstacle:
    addi $t9, $t9, 1
    j drawObstaclesLoop

endDrawObstacles:
   
    # Dibujar explosi√≥n si est√° activa
    lw $t0, explosionActive
    beqz $t0, skipExplosion
   
    lw $a0, explosionX
    lw $a1, explosionY
    jal drawExplosion
   
skipExplosion:
   
    # Dibujar auto DESPU√âS (queda arriba)
    move $a0, $s1
    move $a1, $s2
    jal drawCarSprite32
   
    # Dibujar HUD
    jal drawHearts
    jal drawScore
   
    # === FASE 3: INPUT ===
    li $t0, 0xffff0000
    lw $t1, 0($t0)
    andi $t1, $t1, 1
    beq $t1, 0, noKey
   
    lw $t1, 4($t0)
    beq $t1, 'a', moveLeft
    beq $t1, 'A', moveLeft
    beq $t1, 'd', moveRight
    beq $t1, 'D', moveRight
    beq $t1, 'w', moveUp
    beq $t1, 'W', moveUp
    beq $t1, 's', moveDown
    beq $t1, 'S', moveDown
    beq $t1, 'q', exit
    beq $t1, 'Q', exit
    j noKey
   
moveLeft:
    lw $t2, carLane
    beqz $t2, noKey
    addi $t2, $t2, -1
    sw $t2, carLane
   
    beq $t2, 0, setLane0
    beq $t2, 1, setLane1
    j noKey

setLane0:
    lw $t3, lane0X
    sw $t3, carX
    move $s1, $t3
    j noKey
   
setLane1:
    lw $t3, lane1X
    sw $t3, carX
    move $s1, $t3
    j noKey
   
moveRight:
    lw $t2, carLane
    li $t3, 2
    bge $t2, $t3, noKey
    addi $t2, $t2, 1
    sw $t2, carLane
   
    beq $t2, 1, setLane1Right
    beq $t2, 2, setLane2
    j noKey

setLane1Right:
    lw $t3, lane1X
    sw $t3, carX
    move $s1, $t3
    j noKey
   
setLane2:
    lw $t3, lane2X
    sw $t3, carX
    move $s1, $t3
    j noKey

moveUp:
    lw $t2, carSpeed
    li $t3, 3
    bge $t2, $t3, noKey
   
    # Verificar si hay slowdown activo
    lw $t4, slowdownActive
    beqz $t4, normalMoveUp
   
    # Con slowdown, solo puede acelerar hasta velocidad 1
    li $t3, 1
    bge $t2, $t3, noKey
   
normalMoveUp:
    addi $t2, $t2, 1
    sw $t2, carSpeed
    move $s5, $t2
    j noKey

moveDown:
    lw $t2, carSpeed
    blez $t2, noKey
    addi $t2, $t2, -1
    sw $t2, carSpeed
    move $s5, $t2
    j noKey

noKey:
    # === FASE 4: SLOWDOWN Y EXPLOSI√ìN ===
    # Actualizar timer del slowdown PRIMERO
    lw $t0, slowdownActive
    beqz $t0, updateExplosion
   
    lw $t1, slowdownTimer
    addi $t1, $t1, -1
    sw $t1, slowdownTimer
   
    bgtz $t1, updateExplosion
    # Timer lleg√≥ a 0, desactivar slowdown
    sw $zero, slowdownActive

updateExplosion:
    # Actualizar explosi√≥n
    lw $t0, explosionActive
    beqz $t0, checkCollision
   
    # Mover la explosi√≥n hacia abajo (como los obst√°culos)
    lw $t8, carSpeed
    lw $t9, slowdownActive
    beqz $t9, addNormalSpeedExplosion
   
    # Con slowdown, la explosi√≥n se mueve m√°s r√°pido
    addi $t8, $t8, 3
    j moveExplosion
   
addNormalSpeedExplosion:
    addi $t8, $t8, 2
   
moveExplosion:
    lw $t1, explosionY
    add $t1, $t1, $t8      # Sumar velocidad a Y
    sw $t1, explosionY
   
    # Actualizar timer
    lw $t1, explosionTimer
    addi $t1, $t1, -1
    sw $t1, explosionTimer
   
    # Verificar si debe desactivarse (por timer o por salir de pantalla)
    bgtz $t1, checkExplosionBounds
    sw $zero, explosionActive
    j checkCollision
   
checkExplosionBounds:
    lw $t1, explosionY
    li $t2, 128
    blt $t1, $t2, checkCollision
    # Si Y >= 128, desactivar explosi√≥n
    sw $zero, explosionActive

checkCollision:
    li $t9, 0                    # INICIALIZAR √≠ndice a 0
   
checkCollisionLoop:
    lw $t0, MAX_OBSTACLES
    bge $t9, $t0, noCol
   
    # Verificar si est√° activo
    sll $t1, $t9, 2
    la $t2, obstaclesActive
    add $t2, $t2, $t1
    lw $t3, 0($t2)
    beqz $t3, nextCollCheck
   
    # Cargar Y del obst√°culo
    la $t2, obstaclesY
    add $t2, $t2, $t1
    lw $s4, 0($t2)
   
    # Verificar rango Y
    bltz $s4, nextCollCheck
    li $t0, 128
    bge $s4, $t0, nextCollCheck
   
    # Cargar X del obst√°culo
    la $t2, obstaclesX
    add $t2, $t2, $t1
    lw $s3, 0($t2)
   
    # Calcular hitbox auto
    move $t0, $s1
    addi $t0, $t0, -10
    move $t1, $s1
    addi $t1, $t1, 10
    move $t2, $s2
    addi $t2, $t2, 5
    move $t3, $s2
    addi $t3, $t3, 27
   
    # Calcular hitbox obst√°culo
    move $t4, $s3
    addi $t4, $t4, 2
    move $t5, $s3
    addi $t5, $t5, 14
    move $t6, $s4
    addi $t6, $t6, 2
    move $t7, $s4
    addi $t7, $t7, 14
   
    # Verificar colisi√≥n
    bge $t0, $t5, nextCollCheck
    ble $t1, $t4, nextCollCheck
    bge $t2, $t7, nextCollCheck
    ble $t3, $t6, nextCollCheck
   
    # ¬°COLISI√ìN DETECTADA!
    # Guardar √≠ndice
    sw $t9, currentObsIndex
   
    # Cargar tipo del obst√°culo
    sll $t1, $t9, 2
    la $t2, obstaclesType
    add $t2, $t2, $t1
    lw $t0, 0($t2)
   
    beq $t0, 3, charcoCollisionMulti
    beq $t0, 4, powerupCollisionMulti
    j normalCollisionMulti

nextCollCheck:
    addi $t9, $t9, 1
    j checkCollisionLoop

charcoCollisionMulti:
    # Activar slowdown
    li $t0, 1
    sw $t0, slowdownActive
    li $t0, 30
    sw $t0, slowdownTimer
    li $t0, 0
    sw $t0, carSpeed
    move $s5, $t0
   
    # Desactivar este obst√°culo
    lw $t9, currentObsIndex
    sll $t1, $t9, 2
    la $t2, obstaclesActive
    add $t2, $t2, $t1
    sw $zero, 0($t2)
    j noCol

powerupCollisionMulti:
    # Acelerar al jugador (speed = 3)
    li $t0, 3
    sw $t0, carSpeed
    move $s5, $t0
    
    # BONUS: Desactivar slowdown si est· activo
    sw $zero, slowdownActive
    sw $zero, slowdownTimer
   
    # Intentar dar vida extra
    lw $t0, lives
    li $t1, 3
    bge $t0, $t1, skipLifeBonus
   
    # Dar vida extra
    addi $t0, $t0, 1
    sw $t0, lives
   
skipLifeBonus:
    # Desactivar slowdown si est√° activo
    sw $zero, slowdownActive
   
    # Desactivar este obst√°culo
    lw $t9, currentObsIndex
    sll $t1, $t9, 2
    la $t2, obstaclesActive
    add $t2, $t2, $t1
    sw $zero, 0($t2)
    j noCol

normalCollisionMulti:
    # Restar vida PRIMERO para saber si es game over
    lw $t0, lives
    addi $t0, $t0, -1
    sw $t0, lives
   
    # Activar explosi√≥n
    li $t1, 1
    sw $t1, explosionActive
   
    # Timer diferente seg√∫n si es game over o no
    beqz $t0, lastLifeExplosion
    li $t1, 8            # Duraci√≥n normal (8 frames)
    j setExplosionTimer
   
lastLifeExplosion:
    li $t1, 3            # Duraci√≥n CORTA para game over (3 frames)
   
setExplosionTimer:
    sw $t1, explosionTimer
   
    # Calcular centro del obst√°culo para la explosi√≥n
    lw $t9, currentObsIndex
    sll $t2, $t9, 2
   
    la $t3, obstaclesX
    add $t3, $t3, $t2
    lw $t4, 0($t3)
    addi $t4, $t4, 8      # Centro X del obst√°culo
    addi $t4, $t4, -8     # Ajustar para centrar explosi√≥n 16x16
    sw $t4, explosionX
   
    la $t3, obstaclesY
    add $t3, $t3, $t2
    lw $t4, 0($t3)
    addi $t4, $t4, 8      # Centro Y del obst√°culo
    addi $t4, $t4, -8     # Ajustar para centrar explosi√≥n 16x16
    sw $t4, explosionY
   
    # Mostrar mensaje
    li $v0, 4
    la $a0, hitMsg
    syscall
   
    li $v0, 1
    lw $t0, lives         # Recargar lives para imprimir
    move $a0, $t0
    syscall
   
    li $v0, 4
    la $a0, newlineMsg
    syscall
   
    # Desactivar este obst√°culo
    lw $t9, currentObsIndex
    sll $t2, $t9, 2
    la $t3, obstaclesActive
    add $t3, $t3, $t2
    sw $zero, 0($t3)
   
    # Verificar game over
    lw $t0, lives
    bnez $t0, noCol      # Si quedan vidas, continuar normal
   
    # === GAME OVER: Esperar explosi√≥n (versi√≥n corta) ===
waitExplosionLoop:
    # Dibujar un frame m√°s
    jal updateScroll
    jal drawTrack
   
    # Dibujar explosi√≥n
    lw $a0, explosionX
    lw $a1, explosionY
    jal drawExplosion
   
    # Dibujar auto
    move $a0, $s1
    move $a1, $s2
    jal drawCarSprite32
   
    # Dibujar HUD
    jal drawHearts
    jal drawScore
   
    # Actualizar explosi√≥n (moverla muy poco)
    lw $t8, carSpeed
    addi $t8, $t8, 1      # REDUCIDO: solo +1 en vez de +2
    lw $t1, explosionY
    add $t1, $t1, $t8
    sw $t1, explosionY
   
    lw $t1, explosionTimer
    addi $t1, $t1, -1
    sw $t1, explosionTimer
   
    # Delay M√?S CORTO
    li $t0, 30000         # REDUCIDO: 30000 en vez de 50000
waitDelayLoop:
    addi $t0, $t0, -1
    bgtz $t0, waitDelayLoop
   
    # Verificar si termin√≥ la explosi√≥n
    lw $t1, explosionTimer
    bgtz $t1, waitExplosionLoop
   
    # Ya termin√≥ la explosi√≥n, salir
    j exit

noCol:
    # Delay m√°s agresivo
    li $t0, 50000
delayLoop:
    addi $t0, $t0, -1
    bgtz $t0, delayLoop
   
    j loop

exit:
    li $v0, 4
    la $a0, exitMsg
    syscall
    li $v0, 10
    syscall

fillScreen:
    move $t0, $a0
    move $t1, $a1
    li $t2, 8192
fillLoop:
    sw $t1, 0($t0)
    addi $t0, $t0, 4
    addi $t2, $t2, -1
    bgtz $t2, fillLoop
    jr $ra

clearScreen:
    addi $sp, $sp, -4
    sw $ra, 0($sp)
   
    li $a0, 0x10008000
    li $a1, 0x000000        # Negro
    jal fillScreen
   
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

updateScroll:
    lw $t0, scrollOffset
    lw $t1, carSpeed
   
    # Scroll m√°s suave
    addi $t0, $t0, 1        # Era 2, ahora 1 (m√°s suave)
   
    # Agregar velocidad del auto
    add $t0, $t0, $t1
   
    # Loop cuando llega a 64
    li $t2, 64
loopCheck:
    blt $t0, $t2, saveScroll
    sub $t0, $t0, $t2
    j loopCheck
   
saveScroll:
    sw $t0, scrollOffset
    jr $ra

drawTrack:
    addi $sp, $sp, -4
    sw $ra, 0($sp)
   
    lw $t9, scrollOffset    # Cargar offset actual
   
    # Sprite 1: Arriba (puede estar parcialmente fuera)
    li $a0, 0               # X = 0
    move $a1, $t9           # Y = offset
    addi $a1, $a1, -64      # Restar 64 para que empiece arriba
    jal drawPista64Simple
   
    # Sprite 2: Centro
    li $a0, 0
    move $a1, $t9           # Y = offset
    jal drawPista64Simple
   
    # Sprite 3: Abajo
    li $a0, 0
    move $a1, $t9
    addi $a1, $a1, 64       # Sumar 64 para que est√© abajo
    jal drawPista64Simple
   
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

drawPista64Simple:
    addi $sp, $sp, -24
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)
   
    move $s0, $a0           # X inicial
    move $s1, $a1           # Y inicial
   
    la $s2, pista64_data
    li $s3, 0               # fila

rowLoop:
    add $s4, $s1, $s3       # Y_pantalla
   
    # Clipping vertical
    bltz $s4, skipRow
    li $t0, 128
    bge $s4, $t0, endSprite
   
    # Calcular direcci√≥n base de la fila UNA SOLA VEZ
    li $t2, 0x10008000
    move $t3, $s4
    sll $t3, $t3, 6         # Y * 64 (optimizado)
    add $t3, $t3, $s0
    sll $t3, $t3, 2
    add $t2, $t2, $t3       # Direcci√≥n base de la fila
   
    li $s5, 0               # columna

colLoop:
    lw $t0, 0($s2)          # RGBA
    srl $t1, $t0, 24        # Alpha
   
    # SI alpha = 0, dibujar NEGRO (esto borra el fondo)
    beqz $t1, drawBlack
    andi $t0, $t0, 0x00FFFFFF   # RGB
    j drawIt
   
drawBlack:
    li $t0, 0x000000        # Negro
   
drawIt:
    # Dibujar directamente
    sw $t0, 0($t2)
    addi $t2, $t2, 4        # Siguiente p√≠xel

    addi $s2, $s2, 4
    addi $s5, $s5, 1
    li $t0, 64
    blt $s5, $t0, colLoop
    j nextRow

skipRow:
    addi $s2, $s2, 256      # Saltar fila

nextRow:
    addi $s3, $s3, 1
    li $t0, 64
    blt $s3, $t0, rowLoop

endSprite:
    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    lw $s4, 20($sp)
    addi $sp, $sp, 24
    jr $ra
   
setPixel:
    # Validar coordenadas ANTES de calcular direcci√≥n
    bltz $a0, skipSetPixel      # Si X < 0, skip
    li $t0, 64
    bge $a0, $t0, skipSetPixel  # Si X >= 64, skip
    bltz $a1, skipSetPixel      # Si Y < 0, skip
    li $t0, 128
    bge $a1, $t0, skipSetPixel  # Si Y >= 128, skip
   
    # Ahora s√≠, calcular direcci√≥n (SEGURO)
    li $t0, 0x10008000
    move $t1, $a1
    sll $t1, $t1, 6         # Y * 64 (optimizado)
    add $t1, $t1, $a0
    sll $t1, $t1, 2
    add $t0, $t0, $t1
    sw $a2, 0($t0)

skipSetPixel:
    jr $ra
   
# Dibuja sprite de 32x32 del archivo animacion choque piedra.c
# a0 = x (posici√≥n X)
# a1 = y (posici√≥n Y)
drawCarSprite32:
    addi $sp, $sp, -28
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)
    sw $s5, 24($sp)
   
    move $s0, $a0        # X (centro del sprite)
    move $s1, $a1        # Y (top del sprite)
   
    # Calcular X inicial (sprite centrado)
    addi $s0, $s0, -16   # X inicial = X_centro - 16
   
    la $t0, animacion_choque_piedra_data
    li $s3, 0            # fila

loopY32:
    li $s4, 0            # columna
loopX32:
    lw $t5, 0($t0)       # color RGBA
    srl $t7, $t5, 24     # extraer alpha
    beqz $t7, skipPixel32 # si alpha=0, skip
    andi $t6, $t5, 0x00FFFFFF
   
    # Calcular X del p√≠xel
    add $t8, $s0, $s4
   
    # CLIPPING HORIZONTAL - AGREGAR ESTO
    bltz $t8, skipPixel32        # Si X < 0, skip
    li $t9, 64
    bge $t8, $t9, skipPixel32    # Si X >= 64, skip
   
    # Calcular Y del p√≠xel
    add $t9, $s1, $s3
   
    # CLIPPING VERTICAL
    bltz $t9, skipPixel32        # Si Y < 0, skip
    li $s2, 128
    bge $t9, $s2, skipPixel32    # Si Y >= 128, skip
   
    # Calcular direcci√≥n de p√≠xel
    li $t7, 0x10008000
    mul $s2, $t9, 64             # Y * ancho
    add $s2, $s2, $t8            # + X
    sll $s2, $s2, 2              # * 4 bytes
    add $t7, $t7, $s2
    sw $t6, 0($t7)

skipPixel32:
    addi $t0, $t0, 4
    addi $s4, $s4, 1
    li $t9, 32
    blt $s4, $t9, loopX32

    addi $s3, $s3, 1
    li $t9, 32
    blt $s3, $t9, loopY32

    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    lw $s4, 20($sp)
    lw $s5, 24($sp)
    addi $sp, $sp, 28
    jr $ra

drawObstacle:
    addi $sp, $sp, -8
    sw $ra, 0($sp)
    sw $s6, 4($sp)
   
    move $s6, $a0        # Guardar X
    move $s7, $a1        # Guardar Y
   
    # Cargar tipo de obst√°culo
    lw $t0, obsType
    beqz $t0, drawCono
    beq $t0, 1, drawPiedra
    beq $t0, 2, drawPozo
    beq $t0, 3, drawCharco
    beq $t0, 4, drawPowerUp
   
drawPiedra:
    move $a0, $s6
    move $a1, $s7
    la $a2, piedra_data
    jal drawSprite16Scaled
    j endDrawObstacle

drawPozo:
    move $a0, $s6
    move $a1, $s7
    la $a2, pozo_data
    jal drawSprite16Scaled
    j endDrawObstacle

drawCharco:
    move $a0, $s6
    move $a1, $s7
    la $a2, charco_data
    jal drawSprite16Scaled
    j endDrawObstacle

drawPowerUp:
    move $a0, $s6
    move $a1, $s7
    la $a2, powerup_data
    jal drawSprite16Scaled
    j endDrawObstacle
   
drawCono:
    move $a0, $s6
    move $a1, $s7
    la $a2, cono_data
    jal drawSprite16Scaled
   
endDrawObstacle:
    lw $ra, 0($sp)
    lw $s6, 4($sp)
    addi $sp, $sp, 8
    jr $ra

# Dibuja sprite 32x32 escalado a 16x16
# $a0 = X (esquina superior izquierda)
# $a1 = Y
# $a2 = direcci√≥n del sprite data
drawSprite16Scaled:
    addi $sp, $sp, -32
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)
    sw $s5, 24($sp)
    sw $s6, 28($sp)
   
    move $s0, $a0        # X destino
    move $s1, $a1        # Y destino
    move $s2, $a2        # Puntero a datos
   
    li $s3, 0            # fila destino (0-15)

loopYScaled:
    li $s4, 0            # columna destino (0-15)
   
loopXScaled:
    # Calcular offset en sprite original (tomar cada 2 p√≠xeles)
    move $t0, $s3
    sll $t0, $t0, 1      # fila_src = fila_dst * 2
    move $t1, $s4
    sll $t1, $t1, 1      # col_src = col_dst * 2
   
    # Calcular √≠ndice en array: (fila_src * 32 + col_src) * 4
    mul $t2, $t0, 32
    add $t2, $t2, $t1
    sll $t2, $t2, 2
    add $t3, $s2, $t2
   
    lw $t5, 0($t3)       # Cargar p√≠xel
    srl $t7, $t5, 24     # Extraer alpha
    beqz $t7, skipPixelScaled
    andi $t6, $t5, 0x00FFFFFF
   
    # Calcular posici√≥n destino
    add $t8, $s0, $s4    # X
    add $t9, $s1, $s3    # Y
   
    # Clipping
    bltz $t8, skipPixelScaled
    li $s5, 64
    bge $t8, $s5, skipPixelScaled
    bltz $t9, skipPixelScaled
    li $s5, 128
    bge $t9, $s5, skipPixelScaled
   
    # Dibujar
    li $t7, 0x10008000
    mul $s5, $t9, 64
    add $s5, $s5, $t8
    sll $s5, $s5, 2
    add $t7, $t7, $s5
    sw $t6, 0($t7)

skipPixelScaled:
    addi $s4, $s4, 1
    li $t0, 16
    blt $s4, $t0, loopXScaled

    addi $s3, $s3, 1
    li $t0, 16
    blt $s3, $t0, loopYScaled

    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    lw $s4, 20($sp)
    lw $s5, 24($sp)
    lw $s6, 28($sp)
    addi $sp, $sp, 32
    jr $ra

# Dibuja explosi√≥n 16x16
# $a0 = X, $a1 = Y
drawExplosion:
    addi $sp, $sp, -28
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)
    sw $s5, 24($sp)
   
    move $s0, $a0        # X
    move $s1, $a1        # Y
   
    la $t0, explosion_data
    li $s3, 0            # fila

loopYExplosion:
    li $s4, 0            # columna
loopXExplosion:
    lw $t5, 0($t0)       # color RGBA
    srl $t7, $t5, 24     # extraer alpha
    beqz $t7, skipPixelExplosion
    andi $t6, $t5, 0x00FFFFFF
   
    add $t8, $s0, $s4    # X
    add $t9, $s1, $s3    # Y
   
    # Clipping
    bltz $t8, skipPixelExplosion
    li $s5, 64
    bge $t8, $s5, skipPixelExplosion
    bltz $t9, skipPixelExplosion
    li $s5, 128
    bge $t9, $s5, skipPixelExplosion
   
    # Dibujar
    li $t7, 0x10008000
    mul $s5, $t9, 64
    add $s5, $s5, $t8
    sll $s5, $s5, 2
    add $t7, $t7, $s5
    sw $t6, 0($t7)

skipPixelExplosion:
    addi $t0, $t0, 4
    addi $s4, $s4, 1
    li $t9, 16
    blt $s4, $t9, loopXExplosion

    addi $s3, $s3, 1
    li $t9, 16
    blt $s3, $t9, loopYExplosion

    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    lw $s4, 20($sp)
    lw $s5, 24($sp)
    addi $sp, $sp, 28
    jr $ra

# Dibuja los corazones de vida
drawHearts:
    addi $sp, $sp, -20
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
   
    lw $t9, lives
   
    # Posici√≥n base: abajo a la derecha
    li $s6, 52
    li $s7, 119
   
    # Dibujar 3 corazones
    li $t8, 0

heartLoop:
    bge $t8, 3, endHearts
   
    # Calcular X de este coraz√≥n
    move $a0, $s6
    li $t7, 9
    mult $t8, $t7
    mflo $t7
    sub $a0, $a0, $t7
   
    move $a1, $s7
   
    # Decidir color
    slt $t7, $t8, $t9
    beqz $t7, grayHeart
   
    # Coraz√≥n ROJO
    li $a2, 0xFF0000
    li $a3, 0xAA0000
    j drawThisHeart
   
grayHeart:
    # Coraz√≥n GRIS
    li $a2, 0x555555
    li $a3, 0x333333
   
drawThisHeart:
    move $s0, $a0
    move $s1, $a1
    move $s2, $a2
    move $s3, $a3
   
    # FILA 0: .XX.XX.
    move $a0, $s0
    addi $a0, $a0, 1
    move $a1, $s1
    move $a2, $s2
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
   
    # FILA 1: XXXXXXX
    move $a0, $s0
    addi $a1, $s1, 1
    move $a2, $s2
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
   
    # FILA 2: XXXXXXX
    move $a0, $s0
    addi $a1, $s1, 2
    move $a2, $s2
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
   
    # FILA 3: .XXXXX.
    move $a0, $s0
    addi $a0, $a0, 1
    addi $a1, $s1, 3
    move $a2, $s2
    jal setPixel
    addi $a0, $a0, 1
    move $a2, $s3
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    move $a2, $s2
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
   
    # FILA 4: ..XXX..
    move $a0, $s0
    addi $a0, $a0, 2
    addi $a1, $s1, 4
    move $a2, $s3
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
   
    # FILA 5: ...X...
    move $a0, $s0
    addi $a0, $a0, 3
    addi $a1, $s1, 5
    move $a2, $s3
    jal setPixel
   
    # Siguiente coraz√≥n
    addi $t8, $t8, 1
    j heartLoop
   
endHearts:
    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    addi $sp, $sp, 20
    jr $ra
   
# Dibuja el score en pantalla
drawScore:
    addi $sp, $sp, -28
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)
    sw $s5, 24($sp)
   
    lw $s0, score
    li $s2, 8
    li $s3, 8
   
    beqz $s0, drawSingleZero
   
    move $s1, $s0
    li $s4, 0
    addi $sp, $sp, -32

extractLoop:
    beqz $s1, printDigits
   
    li $t0, 10
    divu $s1, $t0
    mfhi $t1
    mflo $s1
   
    sll $t2, $s4, 2
    add $t2, $t2, $sp
    sw $t1, 0($t2)
   
    addi $s4, $s4, 1
    j extractLoop
   
printDigits:
    li $s5, 0

printLoop:
    bge $s5, $s4, finishPrint
   
    sub $t0, $s4, $s5
    addi $t0, $t0, -1
   
    sll $t0, $t0, 2
    add $t0, $t0, $sp
    lw $a2, 0($t0)
   
    move $a0, $s2
    move $a1, $s3
    jal drawDigit
   
    addi $s2, $s2, 4
    addi $s5, $s5, 1
    j printLoop
   
finishPrint:
    addi $sp, $sp, 32
    j endDrawScore

drawSingleZero:
    move $a0, $s2
    move $a1, $s3
    li $a2, 0
    jal drawDigit
   
endDrawScore:
    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    lw $s4, 20($sp)
    lw $s5, 24($sp)
    addi $sp, $sp, 28
    jr $ra

# Dibuja un d√≠gito 3x5
drawDigit:
    addi $sp, $sp, -4
    sw $ra, 0($sp)
   
    li $t7, 0xFFFF00
   
    beq $a2, 0, digit0
    beq $a2, 1, digit1
    beq $a2, 2, digit2
    beq $a2, 3, digit3
    beq $a2, 4, digit4
    beq $a2, 5, digit5
    beq $a2, 6, digit6
    beq $a2, 7, digit7
    beq $a2, 8, digit8
    beq $a2, 9, digit9
    j endDigit

digit0:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    move $a0, $s6
    move $a1, $s7
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    li $t8, 3
digit0_loop:
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $t8, $t8, -1
    bgtz $t8, digit0_loop
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit1:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    addi $a0, $a0, 1
    li $t8, 5
digit1_loop:
    jal setPixel
    addi $a1, $a1, 1
    addi $t8, $t8, -1
    bgtz $t8, digit1_loop
    j endDigit

digit2:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit3:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit4:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    li $t8, 2
digit4_loop:
    addi $a1, $a1, 1
    jal setPixel
    addi $t8, $t8, -1
    bgtz $t8, digit4_loop
    j endDigit

digit5:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit6:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit7:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    li $t8, 4
digit7_loop:
    addi $a1, $a1, 1
    jal setPixel
    addi $t8, $t8, -1
    bgtz $t8, digit7_loop
    j endDigit

digit8:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit9:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel

endDigit:
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra
   
# Genera n√∫mero aleatorio simple (LCG)
getRandom:
    addi $sp, $sp, -4
    sw $ra, 0($sp)

    lw $t0, randomSeed
    lw $t1, frameCounter
   
    xor $t0, $t0, $t1
    sll $t2, $t1, 7
    xor $t0, $t0, $t2
    xor $t0, $t0, $sp
   
    srl $t3, $t0, 13
    sll $t4, $t0, 19
    or $t0, $t3, $t4

    li $t2, 1664525
    multu $t0, $t2
    mflo $t0
    li $t3, 1013904223
    addu $t0, $t0, $t3
   
    sw $t0, randomSeed

    srl $t4, $t0, 16
    xor $t0, $t0, $t4
    srl $t4, $t0, 8
    xor $t0, $t0, $t4

    divu $t0, $a0
    mfhi $v0

    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

# Inicializa los obst√°culos
initObstacles:
    addi $sp, $sp, -8
    sw $ra, 0($sp)
    sw $s0, 4($sp)
   
    li $t0, 54321
    lw $t1, frameCounter
    add $t0, $t0, $t1
    sw $t0, randomSeed
   
    li $s0, 0
    li $t8, -30
   
initObsLoop:
    lw $t0, MAX_OBSTACLES
    bge $s0, $t0, endInitObs
   
    li $t9, 2
    bge $s0, $t9, skipActivation
   
    sll $t1, $s0, 2
    la $t2, obstaclesActive
    add $t2, $t2, $t1
    li $t3, 1
    sw $t3, 0($t2)
   
    la $t2, obstaclesY
    add $t2, $t2, $t1
    li $t3, -70
    mul $t4, $s0, $t3
    sw $t4, 0($t2)
   
    # Generar tipo aleatorio (0-4, incluyendo power-up)
    li $a0, 5
    jal getRandom
    la $t2, obstaclesType
    sll $t1, $s0, 2
    add $t2, $t2, $t1
    sw $v0, 0($t2)
   
    move $a0, $s0
    jal getInitialLane
    move $t4, $v0
   
    sw $t4, lastLane
   
    beq $t4, 0, initLane0
    beq $t4, 1, initLane1
    beq $t4, 2, initLane2

initLane0:
    lw $t5, obsLane0X
    j saveInitX
initLane1:
    lw $t5, obsLane1X
    j saveInitX
initLane2:
    lw $t5, obsLane2X

saveInitX:
    la $t2, obstaclesX
    sll $t1, $s0, 2
    add $t2, $t2, $t1
    sw $t5, 0($t2)
   
skipActivation:
    addi $s0, $s0, 1
    j initObsLoop

endInitObs:
    lw $ra, 0($sp)
    lw $s0, 4($sp)
    addi $sp, $sp, 8
    jr $ra

# Genera carril inicial
getInitialLane:
    addi $sp, $sp, -4
    sw $ra, 0($sp)
   
    move $t0, $a0
   
    li $t1, 3
    rem $v0, $t0, $t1
   
    li $a0, 3
    jal getRandom
    add $v0, $v0, $v0
    li $t1, 3
    rem $v0, $v0, $t1
   
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

# Intenta spawnear un nuevo obst√°culo
trySpawnObstacle:
    addi $sp, $sp, -12
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
   
    li $s0, 0
    la $s1, obstaclesActive
   
findInactiveSlot:
    lw $t0, MAX_OBSTACLES
    bge $s0, $t0, endSpawn
   
    sll $t1, $s0, 2
    add $t2, $s1, $t1
    lw $t3, 0($t2)
    beqz $t3, foundSlot
   
    addi $s0, $s0, 1
    j findInactiveSlot

foundSlot:
    jal checkSpawnDistance
    beqz $v0, endSpawn
   
    sll $t1, $s0, 2
    la $t2, obstaclesActive
    add $t2, $t2, $t1
    li $t3, 1
    sw $t3, 0($t2)
   
    la $t2, obstaclesY
    add $t2, $t2, $t1
    li $t3, -20
    sw $t3, 0($t2)
   
    # Generar tipo aleatorio CONDICIONAL
lw $t8, lives                    # Cargar vidas actuales
li $t9, 2
bgt $t8, $t9, normalSpawn        # Si vidas > 2, NO puede aparecer power-up

# Si vidas <= 2, puede aparecer power-up (pero raro)
li $a0, 30                       # 1 en 20 chance
jal getRandom
li $t9, 1
beq $v0, $t9, spawnPowerup      # Si sale 1, es power-up

normalSpawn:
# Generar tipo normal (0-3, SIN power-up)
li $a0, 4
jal getRandom
j saveObsType

spawnPowerup:
li $v0, 4                        # Forzar tipo 4 (power-up)

saveObsType:
la $t2, obstaclesType
sll $t1, $s0, 2
add $t2, $t2, $t1
sw $v0, 0($t2)
   
    jal getRandomLane
    move $t4, $v0
   
    lw $t0, lastLane
    sw $t0, lastLane2
    sw $t4, lastLane
   
    beq $t4, 0, spawnLane0
    beq $t4, 1, spawnLane1
    beq $t4, 2, spawnLane2

spawnLane0:
    lw $t5, obsLane0X
    j saveSpawnX
spawnLane1:
    lw $t5, obsLane1X
    j saveSpawnX
spawnLane2:
    lw $t5, obsLane2X

saveSpawnX:
    la $t2, obstaclesX
    sll $t1, $s0, 2
    add $t2, $t2, $t1
    sw $t5, 0($t2)

endSpawn:
    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    addi $sp, $sp, 12
    jr $ra
   
# Genera un carril aleatorio evitando repeticiones
getRandomLane:
    addi $sp, $sp, -8
    sw $ra, 0($sp)
    sw $s0, 4($sp)
   
    lw $t0, lastLane
    lw $t1, lastLane2
    lw $t2, consecutiveSameLane
   
    li $s0, 0
   
tryGetLane:
    li $t3, 5
    bge $s0, $t3, forceRandomLane
   
    li $a0, 3
    jal getRandom
    move $t4, $v0
   
    li $t5, -1
    beq $t0, $t5, acceptLane
   
    bne $t4, $t0, acceptLane
   
    addi $t2, $t2, 1
   
    li $t5, 2
    bge $t2, $t5, rejectLane
   
    li $a0, 2
    jal getRandom
    bnez $v0, acceptLane
   
rejectLane:
    addi $s0, $s0, 1
    j tryGetLane

forceRandomLane:
    lw $t0, lastLane
    addi $t4, $t0, 1
    li $t5, 3
    rem $t4, $t4, $t5
    li $t2, 0

acceptLane:
    lw $t0, lastLane
    beq $t4, $t0, keepCounter
    li $t2, 0
   
keepCounter:
    sw $t2, consecutiveSameLane
    move $v0, $t4
   
    lw $ra, 0($sp)
    lw $s0, 4($sp)
    addi $sp, $sp, 8
    jr $ra

# Verifica si hay suficiente espacio para spawnear
checkSpawnDistance:
    addi $sp, $sp, -4
    sw $s2, 0($sp)
   
    li $s2, 0
    la $t0, obstaclesActive
    la $t1, obstaclesY
    lw $t8, spawnDistance
   
checkDistLoop:
    lw $t2, MAX_OBSTACLES
    bge $s2, $t2, okToSpawn
   
    sll $t3, $s2, 2
    add $t4, $t0, $t3
    lw $t5, 0($t4)
    beqz $t5, nextDistCheck
   
    add $t4, $t1, $t3
    lw $t6, 0($t4)
   
    li $t7, -20
    sub $t9, $t6, $t7
   
    blt $t9, $t8, tooClose
   
nextDistCheck:
    addi $s2, $s2, 1
    j checkDistLoop

tooClose:
    li $v0, 0
    j endDistCheck

okToSpawn:
    li $v0, 1

endDistCheck:
    lw $s2, 0($sp)
    addi $sp, $sp, 4
    jr $ra

.data
gameOverMsg: .asciiz "\n=== GAME OVER ===\nScore: "
newlineMsg: .asciiz "\n"
hitMsg: .asciiz "HIT! Lives: "
exitMsg: .asciiz "\nBye!\n"

scrollOffset: .word 0
lineOffset: .word 0
lineSpeed: .word 1
       # Velocidad de scroll
# Sprite 32x32 del auto rojo
animacion_choque_piedra_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff0000a0, 0xff0000cd, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff0000dc, 0xff0000cd, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff0000be, 0xff0000dc, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000af, 0xff000091, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff0000cd, 0xff0000fa, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff2c2c2c, 0xff545454, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000be, 0xff0000fa, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff3c3c3c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff0000dc, 0xff0000a0, 0xff0000af, 0xff0000dc, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff2c2c2c, 0xff444444, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff343434, 0xff3c3c3c, 0xff000000, 0xff000000, 0x00000000, 0xff000000, 0xff0000cd, 0xff0000af, 0xff0000cd, 0xff0000dc, 0xff000000, 0x00000000, 0xff000000, 0xff000000, 0xff242424, 0xff343434, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff343434, 0xff000000, 0x00000000, 0xff000000, 0xff000000, 0xff0000cd, 0xff0000dc, 0xff3737ff, 0xff0000dc, 0xff000000, 0xff000000, 0x00000000, 0xff000000, 0xff3c3c3c, 0xff3c3c3c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0xff0000dc, 0xff000082, 0xff0000dc, 0xff0000a0, 0xff0000cd, 0xff0000dc, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff000000, 0xff3737ff, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000091, 0xff000000, 0xff000000, 0xff000000, 0xff181818, 0xff0000eb, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff000000, 0xff0000dc, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff3737ff, 0xff000000, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff0000dc, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff0000eb, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000091, 0xff0a0aff, 0xff0000fa, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff000082, 0xff0000cd, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff0000dc, 0xff0000fa, 0xff0000be, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff0000af, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff000091, 0xff0000be, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff0000dc, 0xff0000be, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff2828ff, 0xff0000eb, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff444444, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff000000, 0xff0000a0, 0xff2828ff, 0xff000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff444444, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff0000dc, 0xff000000, 0xff000000, 0xff2828ff, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff3c3c3c, 0xff242424, 0xff3c3c3c, 0xff000000, 0xff444444, 0xff000000, 0xff0000dc, 0xff080808, 0xff000000, 0xff0000fa, 0xff000000, 0xff444444, 0xff000000, 0xff3c3c3c, 0xff444444, 0xff343434, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff242424, 0xff545454, 0xff444444, 0xff000000, 0xff000000, 0xff282828, 0xff0000dc, 0xff0a0aff, 0xff0000eb, 0xff0000fa, 0xff000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff3c3c3c, 0xff3c3c3c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff343434, 0xff3c3c3c, 0xff3c3c3c, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff5c5c5c, 0xff2c2c2c, 0xff444444, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff444444, 0xff242424, 0xff000000, 0xff000000, 0xff0000fa, 0xff0000dc, 0xff0000dc, 0xff2828ff, 0xff0000eb, 0xff0000fa, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff3c3c3c, 0xff4c4c4c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0xff000000, 0xff000093, 0xff0000a2, 0xff0000b1, 0xff000093, 0xff000093, 0xff0000a2, 0xff000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

# Sprite 32x32 de pista y meta
pista64_data:
    .word
    0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000,
0xffda0000, 0xffda0000, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffda0000, 0xffda0000

# Sprite de cono 32x32
cono_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff953d07, 0xffe05b0c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xfff7f7f7, 0xffefefef, 0xffbfbfbf, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffefefef, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffa44308, 0xffa44308, 0xffb34909, 0xff953d07, 0xffe05b0c, 0xffb34909, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffb34909, 0xff863706, 0xff953d07, 0xff863706, 0xffc24f0a, 0xff953d07, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff953d07, 0xffa44308, 0xff953d07, 0xff863706, 0xff682b04, 0xffa44308, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffb34909, 0xff953d07, 0xff773105, 0xffa44308, 0xff863706, 0xffe05b0c, 0xffe05b0c, 0xffc24f0a, 0xffb34909, 0xffe05b0c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffa44308, 0xffc24f0a, 0xffb34909, 0xff953d07, 0xffc24f0a, 0xff592503, 0xffc24f0a, 0xffe05b0c, 0xffe05b0c, 0xffb34909, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffefefef, 0xffdfdfdf, 0xffd7d7d7, 0xffe7e7e7, 0xffe7e7e7, 0xffafafaf, 0xffffffff, 0xffefefef, 0xfff7f7f7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffcfcfcf, 0xfff7f7f7, 0xffd7d7d7, 0xffcfcfcf, 0xff979797, 0xffefefef, 0xffefefef, 0xffffffff, 0xffffffff, 0xffffffff, 0xffefefef, 0xffcfcfcf, 0xffffffff, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffe7e7e7, 0xffafafaf, 0xffe7e7e7, 0xffefefef, 0xffe7e7e7, 0xffffffff, 0xffdfdfdf, 0xfff7f7f7, 0xffffffff, 0xffe7e7e7, 0xffdfdfdf, 0xfff7f7f7, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffe05b0c, 0xffe05b0c, 0xff773105, 0xffa44308, 0xffc24f0a, 0xffa44308, 0xffc24f0a, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffe05b0c, 0xffa44308, 0xffe05b0c, 0xff4a1f03, 0xffc24f0a, 0xffe05b0c, 0xffa44308, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffb34909, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffffffff, 0xffe7e7e7, 0xffefefef, 0xffd7d7d7, 0xffc7c7c7, 0xffffffff, 0xffdfdfdf, 0xffefefef, 0xffffffff, 0xffffffff, 0xffe7e7e7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffcfcfcf, 0xffffffff, 0xffffffff, 0xffffffff, 0xffe7e7e7, 0xffffffff, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffffffff, 0xffd7d7d7, 0xffffffff, 0xffefefef, 0xffcfcfcf, 0xfff7f7f7, 0xffe7e7e7, 0xffdfdfdf, 0xffffffff, 0xffffffff, 0xffffffff, 0xffcfcfcf, 0xffffffff, 0xfff7f7f7, 0xffe7e7e7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0xff000000, 0xffc34000, 0xffb43b00, 0xffc34000, 0xffff5400, 0xff872c00, 0xfff04f00, 0xffc34000, 0xffc34000, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffb43b00, 0xffff5400, 0xffff5400, 0xff000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

# Sprite de piedra 32x32
piedra_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff6f6f6f, 0xff5f5f5f, 0xff474747, 0xff575757, 0xff4f4f4f, 0xff0f0f0f, 0xff5f5f5f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff676767, 0xff5f5f5f, 0xff9f9f9f, 0xffb7b7b7, 0xff7f7f7f, 0xff7f7f7f, 0xff676767, 0xff676767, 0xff6f6f6f, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff474747, 0xff272727, 0xff6f6f6f, 0xff9f9f9f, 0xffb7b7b7, 0xffdfdfdf, 0xff979797, 0xff8f8f8f, 0xff6f6f6f, 0xffd7d7d7, 0xff8f8f8f, 0xff979797, 0xff7f7f7f, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff7f7f7f, 0xff8f8f8f, 0xff7f7f7f, 0xff7f7f7f, 0xff878787, 0xff8f8f8f, 0xff8f8f8f, 0xff777777, 0xff878787, 0xff8f8f8f, 0xff979797, 0xff9f9f9f, 0xff979797, 0xff878787, 0xff7f7f7f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff777777, 0xff878787, 0xff676767, 0xff8f8f8f, 0xff7f7f7f, 0xff878787, 0xff5f5f5f, 0xff878787, 0xff8f8f8f, 0xff8f8f8f, 0xff979797, 0xff8f8f8f, 0xffc7c7c7, 0xff8f8f8f, 0xffa7a7a7, 0xffa7a7a7, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff777777, 0xff8f8f8f, 0xff676767, 0xff8f8f8f, 0xff777777, 0xff8f8f8f, 0xff6f6f6f, 0xff878787, 0xff7f7f7f, 0xff8f8f8f, 0xffa7a7a7, 0xff8f8f8f, 0xffcfcfcf, 0xff8f8f8f, 0xffbfbfbf, 0xff7f7f7f, 0xff8f8f8f, 0xff575757, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff878787, 0xff6f6f6f, 0xff8f8f8f, 0xff8f8f8f, 0xff575757, 0xff8f8f8f, 0xff8f8f8f, 0xff7f7f7f, 0xff878787, 0xff8f8f8f, 0xffafafaf, 0xff8f8f8f, 0xff8f8f8f, 0xffbfbfbf, 0xff8f8f8f, 0xff8f8f8f, 0xff3f3f3f, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff8f8f8f, 0xff7f7f7f, 0xff8f8f8f, 0xff676767, 0xff6f6f6f, 0xff7f7f7f, 0xff878787, 0xff8f8f8f, 0xff5f5f5f, 0xff7f7f7f, 0xff676767, 0xff8f8f8f, 0xff979797, 0xff8f8f8f, 0xff7f7f7f, 0xff676767, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff8f8f8f, 0xff878787, 0xff777777, 0xff7f7f7f, 0xff8f8f8f, 0xff8f8f8f, 0xff8f8f8f, 0xff8f8f8f, 0xff7f7f7f, 0xff8f8f8f, 0xff8f8f8f, 0xff8f8f8f, 0xff9f9f9f, 0xff777777, 0xff6f6f6f, 0xff7f7f7f, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff8f8f8f, 0xff7f7f7f, 0xff8f8f8f, 0xff6f6f6f, 0xff676767, 0xff5f5f5f, 0xff979797, 0xff979797, 0xff777777, 0xff979797, 0xff8f8f8f, 0xff5f5f5f, 0xff8f8f8f, 0xff7f7f7f, 0xff878787, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff878787, 0xff777777, 0xff8f8f8f, 0xff777777, 0xff676767, 0xff8f8f8f, 0xffa7a7a7, 0xff8f8f8f, 0xff777777, 0xff8f8f8f, 0xff7f7f7f, 0xff8f8f8f, 0xff6f6f6f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff080808, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

pozo_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff626262, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff262626, 0xff3b3b3b, 0xff3b3b3b, 0xff171717, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff626262, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff3b3b3b, 0xff3b3b3b, 0xff262626, 0xff626262, 0xff626262, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff3b3b3b, 0xff3b3b3b, 0xff262626, 0xff626262, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff171717, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff626262, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff262626, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff3b3b3b, 0xff626262, 0xff626262, 0xff626262, 0xff626262, 0xff626262, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0xff3b3b3b, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

charco_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff4c4c4c, 0xff000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff4c4c4c, 0xff545454, 0xff4c4c4c, 0xff4c4c4c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff4c4c4c, 0xff5c5c5c, 0xff646464, 0xff646464, 0xff5c5c5c, 0xff242424, 0xff343434, 0xff3c3c3c, 0xff4c4c4c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff181818, 0xff000000, 0xff242424, 0xff4c4c4c, 0xff444444, 0xff848484, 0xff6c6c6c, 0xff545454, 0xff646464, 0xff9c9c9c, 0xff3c3c3c, 0xff1c1c1c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff8c8c8c, 0xff6c6c6c, 0xff4c4c4c, 0xff242424, 0xff3c3c3c, 0xff545454, 0xff949494, 0xff444444, 0xff5c5c5c, 0xff949494, 0xff949494, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff5c5c5c, 0xff5c5c5c, 0xff5c5c5c, 0xff3c3c3c, 0xff747474, 0xff7c7c7c, 0xff7c7c7c, 0xff646464, 0xff6c6c6c, 0xff747474, 0xff747474, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff545454, 0xff545454, 0xff747474, 0xff545454, 0xff6c6c6c, 0xff545454, 0xff5c5c5c, 0xff646464, 0xff848484, 0xff4c4c4c, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff4c4c4c, 0xff5c5c5c, 0xff5c5c5c, 0xff6c6c6c, 0xff646464, 0xff141414, 0xff9c9c9c, 0xff7c7c7c, 0xff646464, 0xff646464, 0xff6c6c6c, 0xff646464, 0xff545454, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff4c4c4c, 0xff4c4c4c, 0xff5c5c5c, 0xff545454, 0xff5c5c5c, 0xff5c5c5c, 0xff343434, 0xffa4a4a4, 0xff8c8c8c, 0xff7c7c7c, 0xff8c8c8c, 0xff8c8c8c, 0xff4c4c4c, 0xff4c4c4c, 0xff646464, 0xff4c4c4c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff545454, 0xff5c5c5c, 0xff646464, 0xff6c6c6c, 0xff6c6c6c, 0xff747474, 0xff545454, 0xff7c7c7c, 0xff747474, 0xff5c5c5c, 0xff8c8c8c, 0xff949494, 0xffdcdcdc, 0xff4c4c4c, 0xff4c4c4c, 0xff000000, 0xff000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff8c8c8c, 0xff848484, 0xff6c6c6c, 0xff4c4c4c, 0xff3c3c3c, 0xff747474, 0xff646464, 0xff7c7c7c, 0xff8c8c8c, 0xff8c8c8c, 0xff5c5c5c, 0xff4c4c4c, 0xff4c4c4c, 0xff343434, 0xff4c4c4c, 0xff000000, 0xff000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff4c4c4c, 0xff545454, 0xff646464, 0xff8c8c8c, 0xff4c4c4c, 0xff5c5c5c, 0xff545454, 0xff6c6c6c, 0xff4c4c4c, 0xff6c6c6c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff1c1c1c, 0xff4c4c4c, 0xff000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff5c5c5c, 0xff7c7c7c, 0xff545454, 0xff848484, 0xff848484, 0xff4c4c4c, 0xff5c5c5c, 0xff444444, 0xff5c5c5c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff646464, 0xff6c6c6c, 0xff5c5c5c, 0xff646464, 0xff747474, 0xff646464, 0xff4c4c4c, 0xff7c7c7c, 0xff444444, 0xff646464, 0xff5c5c5c, 0xff343434, 0xff4c4c4c, 0xff4c4c4c, 0xff3c3c3c, 0xff242424, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff7c7c7c, 0xffb4b4b4, 0xff949494, 0xffb4b4b4, 0xff848484, 0xff545454, 0xff747474, 0xff444444, 0xff2c2c2c, 0xff4c4c4c, 0xff4c4c4c, 0xff242424, 0xff3c3c3c, 0xff2c2c2c, 0xff444444, 0xff343434, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffc4c4c4, 0xff848484, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff3c3c3c, 0xff545454, 0xff9c9c9c, 0xff4c4c4c, 0xff4c4c4c, 0xff4c4c4c, 0xff2c2c2c, 0xff4c4c4c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff4c4c4c, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff4c4c4c, 0xff3c3c3c, 0xff4c4c4c, 0xff4c4c4c, 0xff545454, 0xff6c6c6c, 0xff545454, 0xff1c1c1c, 0xff4c4c4c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff2c2c2c, 0xff4c4c4c, 0xff000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff3c3c3c, 0xff4c4c4c, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff3c3c3c, 0xff444444, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff4c4c4c, 0xff242424, 0xff4c4c4c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff242424, 0xff3c3c3c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff4c4c4c, 0xff4c4c4c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

# Sprite de explosiÔøΩn 16x16 (simple pero efectivo)
explosion_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffFF6600, 0xffFF6600, 0x00000000, 0x00000000, 0xffFF6600, 0xffFF6600, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0xffFF6600, 0xffFF6600, 0xffFF3300, 0xffFF3300, 0xffFF6600, 0xffFF6600, 0xffFF3300, 0xffFF3300, 0xffFF6600, 0xffFF6600, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0xffFF6600, 0xffFF3300, 0xffFF0000, 0xffFF0000, 0xffFF3300, 0xffFFFF00, 0xffFFFF00, 0xffFF3300, 0xffFF0000, 0xffFF0000, 0xffFF3300, 0xffFF6600, 0x00000000, 0x00000000,
    0x00000000, 0xffFF6600, 0xffFF0000, 0xffFF0000, 0xffFF0000, 0xffFFFF00, 0xffFFFF00, 0xffFFFF00, 0xffFFFF00, 0xffFFFF00, 0xffFFFF00, 0xffFF0000, 0xffFF0000, 0xffFF0000, 0xffFF6600, 0x00000000,
    0x00000000, 0xffFF6600, 0xffFF0000, 0xffFF0000, 0xffFFFF00, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFF00, 0xffFF0000, 0xffFF0000, 0xffFF6600, 0x00000000,
    0xffFF6600, 0xffFF3300, 0xffFF0000, 0xffFFFF00, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFF00, 0xffFF0000, 0xffFF3300, 0xffFF6600,
    0xffFF6600, 0xffFF3300, 0xffFF3300, 0xffFFFF00, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFF00, 0xffFF3300, 0xffFF3300, 0xffFF6600,
    0x00000000, 0xffFF6600, 0xffFFFF00, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFF00, 0xffFF6600, 0x00000000,
    0x00000000, 0xffFF6600, 0xffFFFF00, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFF00, 0xffFF6600, 0x00000000,
    0xffFF6600, 0xffFF3300, 0xffFF3300, 0xffFFFF00, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFF00, 0xffFF3300, 0xffFF3300, 0xffFF6600,
    0xffFF6600, 0xffFF3300, 0xffFF0000, 0xffFFFF00, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFF00, 0xffFF0000, 0xffFF3300, 0xffFF6600,
    0x00000000, 0xffFF6600, 0xffFF0000, 0xffFF0000, 0xffFFFF00, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFFFF, 0xffFFFF00, 0xffFF0000, 0xffFF0000, 0xffFF6600, 0x00000000,
    0x00000000, 0xffFF6600, 0xffFF0000, 0xffFF0000, 0xffFF0000, 0xffFFFF00, 0xffFFFF00, 0xffFFFF00, 0xffFFFF00, 0xffFFFF00, 0xffFFFF00, 0xffFF0000, 0xffFF0000, 0xffFF0000, 0xffFF6600, 0x00000000,
    0x00000000, 0x00000000, 0xffFF6600, 0xffFF3300, 0xffFF0000, 0xffFF0000, 0xffFF3300, 0xffFFFF00, 0xffFFFF00, 0xffFF3300, 0xffFF0000, 0xffFF0000, 0xffFF3300, 0xffFF6600, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0xffFF6600, 0xffFF6600, 0xffFF3300, 0xffFF3300, 0xffFF6600, 0xffFF6600, 0xffFF3300, 0xffFF3300, 0xffFF6600, 0xffFF6600, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffFF6600, 0xffFF6600, 0x00000000, 0x00000000, 0xffFF6600, 0xffFF6600, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

# Variables para la explosiÔøΩn
explosionActive: .word 0
explosionX: .word 0
explosionY: .word 0
explosionTimer: .word 0

obsType: .word 0        # 0 = cono, 1 = piedra, 2 = pozo, 3 = charco
slowdownTimer: .word 0
slowdownActive: .word 0
randomSeed: .word 0 # Semilla para generador aleatorio




# Sprite de power-up 32x32 (estrella verde brillante)
powerup_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff0000e6, 0xff0000e6, 0xff0000e6, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff0000e6, 0xff0000e6, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff0000e6, 0xff0000e6, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff3e3ee0, 0xff3e3ee0, 0xff3e3ee0, 0xff17c8ca, 0xff17c8ca, 0xff0000e6, 0xff17c8ca, 0xff17c8ca, 0xff3e3ee0, 0xff3e3ee0, 0xff3e3ee0, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff00e3e6, 0xff3e3ee0, 0xff3e3ee0, 0xff3e3ee0, 0xff17c8ca, 0xff17c8ca, 0xff0000e6, 0xff17c8ca, 0xff17c8ca, 0xff3e3ee0, 0xff3e3ee0, 0xff3e3ee0, 0xff00e3e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff181818, 0xff0000e6, 0xff3e3ee0, 0xff3e3ee0, 0xff0000e6, 0xff17c8ca, 0xff17c8ca, 0xff0000e6, 0xff17c8ca, 0xff17c8ca, 0xff0000e6, 0xff3e3ee0, 0xff3e3ee0, 0xff0000e6, 0xff181818, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000e6, 0xff3e3ee0, 0xff0000e6, 0xff0000e6, 0xff17c8ca, 0xff17c8ca, 0xff0000e6, 0xff17c8ca, 0xff17c8ca, 0xff0000e6, 0xff0000e6, 0xff3e3ee0, 0xff0000e6, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000e6, 0xff3e3ee0, 0xff0000e6, 0xff000000, 0xff000000, 0xff292929, 0xff292929, 0xff000000, 0xff000000, 0xff000000, 0xff0000e6, 0xff3e3ee0, 0xff0000e6, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000e6, 0xff3e3ee0, 0xff000000, 0xff000000, 0xff292929, 0xff292929, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff292929, 0xff3e3ee0, 0xff0000e6, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff000000, 0xff000000, 0xff292929, 0xff292929, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff292929, 0xff292929, 0xff000000, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff000000, 0xff292929, 0xff292929, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff292929, 0xff292929, 0xff000000, 0xff000000, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff000000, 0xff0000e6, 0xff0000e6, 0xff181818, 0xff181818, 0xff0000e6, 0xff181818, 0xff181818, 0xff0000e6, 0xff0000e6, 0xff000000, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff1111a5, 0xff0000e6, 0xff181818, 0xff14c125, 0xff14c125, 0xff181818, 0xff14c125, 0xff14c125, 0xff181818, 0xff0000e6, 0xff1111a5, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff000000, 0xff0000e6, 0xff181818, 0xff14c125, 0xff14c125, 0xff14c125, 0xff14c125, 0xff14c125, 0xff181818, 0xff0000e6, 0xff000000, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff000000, 0xff0000e6, 0xff0000e6, 0xff181818, 0xff14c125, 0xff14c125, 0xff14c125, 0xff181818, 0xff0000e6, 0xff0000e6, 0xff000000, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff000000, 0xff0000e6, 0xff0000e6, 0xff17c8ca, 0xff181818, 0xff14c125, 0xff181818, 0xff17c8ca, 0xff0000e6, 0xff0000e6, 0xff000000, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff0505c4, 0xff0000e6, 0xff1111a5, 0xff17c8ca, 0xff17c8ca, 0xff181818, 0xff17c8ca, 0xff17c8ca, 0xff1111a5, 0xff0000e6, 0xff0505c4, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff0505c4, 0xff0505c4, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff0505c4, 0xff0505c4, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff0000e6, 0xff0505c4, 0xff0505c4, 0xff0505c4, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff0505c4, 0xff0505c4, 0xff0505c4, 0xff0000e6, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000e6, 0xff1111a5, 0xff0505c4, 0xff0505c4, 0xff21aeb0, 0xff21aeb0, 0xff12128e, 0xff21aeb0, 0xff21aeb0, 0xff0505c4, 0xff0505c4, 0xff1111a5, 0xff0000e6, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff3e3ee0, 0xff1111a5, 0xff1111a5, 0xff1111a5, 0xff21aeb0, 0xff21aeb0, 0xff1111a5, 0xff21aeb0, 0xff21aeb0, 0xff1111a5, 0xff1111a5, 0xff1111a5, 0xff3e3ee0, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff3e3ee0, 0xff1111a5, 0xff1111a5, 0xff1111a5, 0xff17c8ca, 0xff17c8ca, 0xff0000e6, 0xff17c8ca, 0xff17c8ca, 0xff1111a5, 0xff1111a5, 0xff1111a5, 0xff3e3ee0, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff1111a5, 0xff3e3ee0, 0xff3e3ee0, 0xff3e3ee0, 0xff17c8ca, 0xff17c8ca, 0xff0000e6, 0xff17c8ca, 0xff17c8ca, 0xff3e3ee0, 0xff3e3ee0, 0xff3e3ee0, 0xff1111a5, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff1111a5, 0xff1111a5, 0xff1111a5, 0xff17c8ca, 0xff17c8ca, 0xff0000e6, 0xff17c8ca, 0xff17c8ca, 0xff1111a5, 0xff1111a5, 0xff1111a5, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff292929, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff292929, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

frameCounter: .word 0
